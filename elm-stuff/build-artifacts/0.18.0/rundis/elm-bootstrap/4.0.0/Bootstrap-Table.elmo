var _rundis$elm_bootstrap$Bootstrap_Table$cellAttribute = function (option) {
	var _p0 = option;
	switch (_p0.ctor) {
		case 'RoledCell':
			if (_p0._0.ctor === 'Roled') {
				return A2(_rundis$elm_bootstrap$Bootstrap_Internal_Role$toClass, 'table', _p0._0._0);
			} else {
				return _elm_lang$html$Html_Attributes$class('table-active');
			}
		case 'InversedCell':
			if (_p0._0.ctor === 'Roled') {
				return A2(_rundis$elm_bootstrap$Bootstrap_Internal_Role$toClass, 'bg-', _p0._0._0);
			} else {
				return _elm_lang$html$Html_Attributes$class('bg-active');
			}
		default:
			return _p0._0;
	}
};
var _rundis$elm_bootstrap$Bootstrap_Table$cellAttributes = function (options) {
	return A2(_elm_lang$core$List$map, _rundis$elm_bootstrap$Bootstrap_Table$cellAttribute, options);
};
var _rundis$elm_bootstrap$Bootstrap_Table$rowClass = function (option) {
	var _p1 = option;
	switch (_p1.ctor) {
		case 'RoledRow':
			if (_p1._0.ctor === 'Roled') {
				return A2(_rundis$elm_bootstrap$Bootstrap_Internal_Role$toClass, 'table', _p1._0._0);
			} else {
				return _elm_lang$html$Html_Attributes$class('table-active');
			}
		case 'InversedRow':
			if (_p1._0.ctor === 'Roled') {
				return A2(_rundis$elm_bootstrap$Bootstrap_Internal_Role$toClass, 'bg', _p1._0._0);
			} else {
				return _elm_lang$html$Html_Attributes$class('bg-active');
			}
		default:
			return _p1._0;
	}
};
var _rundis$elm_bootstrap$Bootstrap_Table$rowAttributes = function (options) {
	return A2(_elm_lang$core$List$map, _rundis$elm_bootstrap$Bootstrap_Table$rowClass, options);
};
var _rundis$elm_bootstrap$Bootstrap_Table$theadAttribute = function (option) {
	var _p2 = option;
	switch (_p2.ctor) {
		case 'InversedHead':
			return _elm_lang$html$Html_Attributes$class('thead-dark');
		case 'DefaultHead':
			return _elm_lang$html$Html_Attributes$class('thead-default');
		default:
			return _p2._0;
	}
};
var _rundis$elm_bootstrap$Bootstrap_Table$theadAttributes = function (options) {
	return A2(_elm_lang$core$List$map, _rundis$elm_bootstrap$Bootstrap_Table$theadAttribute, options);
};
var _rundis$elm_bootstrap$Bootstrap_Table$tableClass = function (option) {
	var _p3 = option;
	switch (_p3.ctor) {
		case 'Inversed':
			return _elm_lang$core$Maybe$Just(
				_elm_lang$html$Html_Attributes$class('table-dark'));
		case 'Striped':
			return _elm_lang$core$Maybe$Just(
				_elm_lang$html$Html_Attributes$class('table-striped'));
		case 'Bordered':
			return _elm_lang$core$Maybe$Just(
				_elm_lang$html$Html_Attributes$class('table-bordered'));
		case 'Hover':
			return _elm_lang$core$Maybe$Just(
				_elm_lang$html$Html_Attributes$class('table-hover'));
		case 'Small':
			return _elm_lang$core$Maybe$Just(
				_elm_lang$html$Html_Attributes$class('table-sm'));
		case 'Responsive':
			return _elm_lang$core$Maybe$Nothing;
		case 'Reflow':
			return _elm_lang$core$Maybe$Just(
				_elm_lang$html$Html_Attributes$class('table-reflow'));
		default:
			return _elm_lang$core$Maybe$Just(_p3._0);
	}
};
var _rundis$elm_bootstrap$Bootstrap_Table$tableAttributes = function (options) {
	return {
		ctor: '::',
		_0: _elm_lang$html$Html_Attributes$class('table'),
		_1: A2(
			_elm_lang$core$List$filterMap,
			_elm_lang$core$Basics$identity,
			A2(_elm_lang$core$List$map, _rundis$elm_bootstrap$Bootstrap_Table$tableClass, options))
	};
};
var _rundis$elm_bootstrap$Bootstrap_Table$renderCell = function (cell) {
	var _p4 = cell;
	if (_p4.ctor === 'Td') {
		return A2(
			_elm_lang$html$Html$td,
			_rundis$elm_bootstrap$Bootstrap_Table$cellAttributes(_p4._0.options),
			_p4._0.children);
	} else {
		return A2(
			_elm_lang$html$Html$th,
			_rundis$elm_bootstrap$Bootstrap_Table$cellAttributes(_p4._0.options),
			_p4._0.children);
	}
};
var _rundis$elm_bootstrap$Bootstrap_Table$renderRow = function (row) {
	var _p5 = row;
	if (_p5.ctor === 'Row') {
		return A2(
			_elm_lang$html$Html$tr,
			_rundis$elm_bootstrap$Bootstrap_Table$rowAttributes(_p5._0.options),
			A2(_elm_lang$core$List$map, _rundis$elm_bootstrap$Bootstrap_Table$renderCell, _p5._0.cells));
	} else {
		return A3(
			_elm_lang$html$Html_Keyed$node,
			'tr',
			_rundis$elm_bootstrap$Bootstrap_Table$rowAttributes(_p5._0.options),
			A2(
				_elm_lang$core$List$map,
				function (_p6) {
					var _p7 = _p6;
					return {
						ctor: '_Tuple2',
						_0: _p7._0,
						_1: _rundis$elm_bootstrap$Bootstrap_Table$renderCell(_p7._1)
					};
				},
				_p5._0.cells));
	}
};
var _rundis$elm_bootstrap$Bootstrap_Table$renderTHead = function (_p8) {
	var _p9 = _p8;
	return A2(
		_elm_lang$html$Html$thead,
		_rundis$elm_bootstrap$Bootstrap_Table$theadAttributes(_p9._0.options),
		A2(_elm_lang$core$List$map, _rundis$elm_bootstrap$Bootstrap_Table$renderRow, _p9._0.rows));
};
var _rundis$elm_bootstrap$Bootstrap_Table$isResponsive = function (option) {
	var _p10 = option;
	if (_p10.ctor === 'Responsive') {
		return true;
	} else {
		return false;
	}
};
var _rundis$elm_bootstrap$Bootstrap_Table$maybeWrapResponsive = F2(
	function (options, table) {
		var responsiveClass = _elm_lang$html$Html_Attributes$class(
			A2(
				F2(
					function (x, y) {
						return A2(_elm_lang$core$Basics_ops['++'], x, y);
					}),
				'table-responsive',
				A2(
					_elm_lang$core$Maybe$withDefault,
					'',
					A2(
						_elm_lang$core$Maybe$map,
						function (v) {
							return A2(_elm_lang$core$Basics_ops['++'], '-', v);
						},
						A2(
							_elm_lang$core$Maybe$andThen,
							_rundis$elm_bootstrap$Bootstrap_Grid_Internal$screenSizeOption,
							A2(
								_elm_lang$core$Maybe$andThen,
								function (opt) {
									var _p11 = opt;
									if (_p11.ctor === 'Responsive') {
										return _p11._0;
									} else {
										return _elm_lang$core$Maybe$Nothing;
									}
								},
								_elm_lang$core$List$head(
									A2(_elm_lang$core$List$filter, _rundis$elm_bootstrap$Bootstrap_Table$isResponsive, options))))))));
		return A2(_elm_lang$core$List$any, _rundis$elm_bootstrap$Bootstrap_Table$isResponsive, options) ? A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: responsiveClass,
				_1: {ctor: '[]'}
			},
			{
				ctor: '::',
				_0: table,
				_1: {ctor: '[]'}
			}) : table;
	});
var _rundis$elm_bootstrap$Bootstrap_Table$RowConfig = F2(
	function (a, b) {
		return {options: a, cells: b};
	});
var _rundis$elm_bootstrap$Bootstrap_Table$CellConfig = F2(
	function (a, b) {
		return {options: a, children: b};
	});
var _rundis$elm_bootstrap$Bootstrap_Table$TableAttr = function (a) {
	return {ctor: 'TableAttr', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Table$attr = function (attr) {
	return _rundis$elm_bootstrap$Bootstrap_Table$TableAttr(attr);
};
var _rundis$elm_bootstrap$Bootstrap_Table$Reflow = {ctor: 'Reflow'};
var _rundis$elm_bootstrap$Bootstrap_Table$Responsive = function (a) {
	return {ctor: 'Responsive', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Table$responsive = _rundis$elm_bootstrap$Bootstrap_Table$Responsive(_elm_lang$core$Maybe$Nothing);
var _rundis$elm_bootstrap$Bootstrap_Table$responsiveSm = _rundis$elm_bootstrap$Bootstrap_Table$Responsive(
	_elm_lang$core$Maybe$Just(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$SM));
var _rundis$elm_bootstrap$Bootstrap_Table$responsiveMd = _rundis$elm_bootstrap$Bootstrap_Table$Responsive(
	_elm_lang$core$Maybe$Just(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$MD));
var _rundis$elm_bootstrap$Bootstrap_Table$responsiveLg = _rundis$elm_bootstrap$Bootstrap_Table$Responsive(
	_elm_lang$core$Maybe$Just(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$LG));
var _rundis$elm_bootstrap$Bootstrap_Table$responsiveXl = _rundis$elm_bootstrap$Bootstrap_Table$Responsive(
	_elm_lang$core$Maybe$Just(_rundis$elm_bootstrap$Bootstrap_Grid_Internal$XL));
var _rundis$elm_bootstrap$Bootstrap_Table$Small = {ctor: 'Small'};
var _rundis$elm_bootstrap$Bootstrap_Table$small = _rundis$elm_bootstrap$Bootstrap_Table$Small;
var _rundis$elm_bootstrap$Bootstrap_Table$Hover = {ctor: 'Hover'};
var _rundis$elm_bootstrap$Bootstrap_Table$hover = _rundis$elm_bootstrap$Bootstrap_Table$Hover;
var _rundis$elm_bootstrap$Bootstrap_Table$Bordered = {ctor: 'Bordered'};
var _rundis$elm_bootstrap$Bootstrap_Table$bordered = _rundis$elm_bootstrap$Bootstrap_Table$Bordered;
var _rundis$elm_bootstrap$Bootstrap_Table$Striped = {ctor: 'Striped'};
var _rundis$elm_bootstrap$Bootstrap_Table$striped = _rundis$elm_bootstrap$Bootstrap_Table$Striped;
var _rundis$elm_bootstrap$Bootstrap_Table$Inversed = {ctor: 'Inversed'};
var _rundis$elm_bootstrap$Bootstrap_Table$inversed = _rundis$elm_bootstrap$Bootstrap_Table$Inversed;
var _rundis$elm_bootstrap$Bootstrap_Table$HeadAttr = function (a) {
	return {ctor: 'HeadAttr', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Table$headAttr = function (attr) {
	return _rundis$elm_bootstrap$Bootstrap_Table$HeadAttr(attr);
};
var _rundis$elm_bootstrap$Bootstrap_Table$DefaultHead = {ctor: 'DefaultHead'};
var _rundis$elm_bootstrap$Bootstrap_Table$defaultHead = _rundis$elm_bootstrap$Bootstrap_Table$DefaultHead;
var _rundis$elm_bootstrap$Bootstrap_Table$InversedHead = {ctor: 'InversedHead'};
var _rundis$elm_bootstrap$Bootstrap_Table$inversedHead = _rundis$elm_bootstrap$Bootstrap_Table$InversedHead;
var _rundis$elm_bootstrap$Bootstrap_Table$RowAttr = function (a) {
	return {ctor: 'RowAttr', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Table$rowAttr = function (attr) {
	return _rundis$elm_bootstrap$Bootstrap_Table$RowAttr(attr);
};
var _rundis$elm_bootstrap$Bootstrap_Table$InversedRow = function (a) {
	return {ctor: 'InversedRow', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Table$RoledRow = function (a) {
	return {ctor: 'RoledRow', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Table$CellAttr = function (a) {
	return {ctor: 'CellAttr', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Table$cellAttr = function (attr) {
	return _rundis$elm_bootstrap$Bootstrap_Table$CellAttr(attr);
};
var _rundis$elm_bootstrap$Bootstrap_Table$InversedCell = function (a) {
	return {ctor: 'InversedCell', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Table$RoledCell = function (a) {
	return {ctor: 'RoledCell', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Table$Active = {ctor: 'Active'};
var _rundis$elm_bootstrap$Bootstrap_Table$rowActive = _rundis$elm_bootstrap$Bootstrap_Table$RoledRow(_rundis$elm_bootstrap$Bootstrap_Table$Active);
var _rundis$elm_bootstrap$Bootstrap_Table$cellActive = _rundis$elm_bootstrap$Bootstrap_Table$RoledCell(_rundis$elm_bootstrap$Bootstrap_Table$Active);
var _rundis$elm_bootstrap$Bootstrap_Table$Roled = function (a) {
	return {ctor: 'Roled', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Table$rowPrimary = _rundis$elm_bootstrap$Bootstrap_Table$RoledRow(
	_rundis$elm_bootstrap$Bootstrap_Table$Roled(_rundis$elm_bootstrap$Bootstrap_Internal_Role$Primary));
var _rundis$elm_bootstrap$Bootstrap_Table$rowSecondary = _rundis$elm_bootstrap$Bootstrap_Table$RoledRow(
	_rundis$elm_bootstrap$Bootstrap_Table$Roled(_rundis$elm_bootstrap$Bootstrap_Internal_Role$Secondary));
var _rundis$elm_bootstrap$Bootstrap_Table$rowSuccess = _rundis$elm_bootstrap$Bootstrap_Table$RoledRow(
	_rundis$elm_bootstrap$Bootstrap_Table$Roled(_rundis$elm_bootstrap$Bootstrap_Internal_Role$Success));
var _rundis$elm_bootstrap$Bootstrap_Table$rowWarning = _rundis$elm_bootstrap$Bootstrap_Table$RoledRow(
	_rundis$elm_bootstrap$Bootstrap_Table$Roled(_rundis$elm_bootstrap$Bootstrap_Internal_Role$Warning));
var _rundis$elm_bootstrap$Bootstrap_Table$rowDanger = _rundis$elm_bootstrap$Bootstrap_Table$RoledRow(
	_rundis$elm_bootstrap$Bootstrap_Table$Roled(_rundis$elm_bootstrap$Bootstrap_Internal_Role$Danger));
var _rundis$elm_bootstrap$Bootstrap_Table$rowInfo = _rundis$elm_bootstrap$Bootstrap_Table$RoledRow(
	_rundis$elm_bootstrap$Bootstrap_Table$Roled(_rundis$elm_bootstrap$Bootstrap_Internal_Role$Info));
var _rundis$elm_bootstrap$Bootstrap_Table$rowLight = _rundis$elm_bootstrap$Bootstrap_Table$RoledRow(
	_rundis$elm_bootstrap$Bootstrap_Table$Roled(_rundis$elm_bootstrap$Bootstrap_Internal_Role$Light));
var _rundis$elm_bootstrap$Bootstrap_Table$rowDark = _rundis$elm_bootstrap$Bootstrap_Table$RoledRow(
	_rundis$elm_bootstrap$Bootstrap_Table$Roled(_rundis$elm_bootstrap$Bootstrap_Internal_Role$Dark));
var _rundis$elm_bootstrap$Bootstrap_Table$cellPrimary = _rundis$elm_bootstrap$Bootstrap_Table$RoledCell(
	_rundis$elm_bootstrap$Bootstrap_Table$Roled(_rundis$elm_bootstrap$Bootstrap_Internal_Role$Primary));
var _rundis$elm_bootstrap$Bootstrap_Table$cellSecondary = _rundis$elm_bootstrap$Bootstrap_Table$RoledCell(
	_rundis$elm_bootstrap$Bootstrap_Table$Roled(_rundis$elm_bootstrap$Bootstrap_Internal_Role$Secondary));
var _rundis$elm_bootstrap$Bootstrap_Table$cellSuccess = _rundis$elm_bootstrap$Bootstrap_Table$RoledCell(
	_rundis$elm_bootstrap$Bootstrap_Table$Roled(_rundis$elm_bootstrap$Bootstrap_Internal_Role$Success));
var _rundis$elm_bootstrap$Bootstrap_Table$cellWarning = _rundis$elm_bootstrap$Bootstrap_Table$RoledCell(
	_rundis$elm_bootstrap$Bootstrap_Table$Roled(_rundis$elm_bootstrap$Bootstrap_Internal_Role$Warning));
var _rundis$elm_bootstrap$Bootstrap_Table$cellDanger = _rundis$elm_bootstrap$Bootstrap_Table$RoledCell(
	_rundis$elm_bootstrap$Bootstrap_Table$Roled(_rundis$elm_bootstrap$Bootstrap_Internal_Role$Danger));
var _rundis$elm_bootstrap$Bootstrap_Table$cellInfo = _rundis$elm_bootstrap$Bootstrap_Table$RoledCell(
	_rundis$elm_bootstrap$Bootstrap_Table$Roled(_rundis$elm_bootstrap$Bootstrap_Internal_Role$Info));
var _rundis$elm_bootstrap$Bootstrap_Table$cellLight = _rundis$elm_bootstrap$Bootstrap_Table$RoledCell(
	_rundis$elm_bootstrap$Bootstrap_Table$Roled(_rundis$elm_bootstrap$Bootstrap_Internal_Role$Light));
var _rundis$elm_bootstrap$Bootstrap_Table$cellDark = _rundis$elm_bootstrap$Bootstrap_Table$RoledCell(
	_rundis$elm_bootstrap$Bootstrap_Table$Roled(_rundis$elm_bootstrap$Bootstrap_Internal_Role$Dark));
var _rundis$elm_bootstrap$Bootstrap_Table$KeyedRow = function (a) {
	return {ctor: 'KeyedRow', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Table$keyedTr = F2(
	function (options, keyedCells) {
		return _rundis$elm_bootstrap$Bootstrap_Table$KeyedRow(
			{options: options, cells: keyedCells});
	});
var _rundis$elm_bootstrap$Bootstrap_Table$Row = function (a) {
	return {ctor: 'Row', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Table$tr = F2(
	function (options, cells) {
		return _rundis$elm_bootstrap$Bootstrap_Table$Row(
			{options: options, cells: cells});
	});
var _rundis$elm_bootstrap$Bootstrap_Table$Th = function (a) {
	return {ctor: 'Th', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Table$addScopeIfTh = function (cell) {
	var _p12 = cell;
	if (_p12.ctor === 'Th') {
		var _p13 = _p12._0;
		return _rundis$elm_bootstrap$Bootstrap_Table$Th(
			_elm_lang$core$Native_Utils.update(
				_p13,
				{
					options: {
						ctor: '::',
						_0: _rundis$elm_bootstrap$Bootstrap_Table$cellAttr(
							_elm_lang$html$Html_Attributes$scope('row')),
						_1: _p13.options
					}
				}));
	} else {
		return cell;
	}
};
var _rundis$elm_bootstrap$Bootstrap_Table$maybeAddScopeToFirstCell = function (row) {
	var _p14 = row;
	if (_p14.ctor === 'Row') {
		var _p15 = _p14._0.cells;
		if (_p15.ctor === '[]') {
			return row;
		} else {
			return _rundis$elm_bootstrap$Bootstrap_Table$Row(
				{
					options: _p14._0.options,
					cells: {
						ctor: '::',
						_0: _rundis$elm_bootstrap$Bootstrap_Table$addScopeIfTh(_p15._0),
						_1: _p15._1
					}
				});
		}
	} else {
		var _p16 = _p14._0.cells;
		if (_p16.ctor === '[]') {
			return row;
		} else {
			return _rundis$elm_bootstrap$Bootstrap_Table$KeyedRow(
				{
					options: _p14._0.options,
					cells: {
						ctor: '::',
						_0: {
							ctor: '_Tuple2',
							_0: _p16._0._0,
							_1: _rundis$elm_bootstrap$Bootstrap_Table$addScopeIfTh(_p16._0._1)
						},
						_1: _p16._1
					}
				});
		}
	}
};
var _rundis$elm_bootstrap$Bootstrap_Table$renderTBody = function (body) {
	var _p17 = body;
	if (_p17.ctor === 'TBody') {
		return A2(
			_elm_lang$html$Html$tbody,
			_p17._0.attributes,
			A2(
				_elm_lang$core$List$map,
				function (row) {
					return _rundis$elm_bootstrap$Bootstrap_Table$renderRow(
						_rundis$elm_bootstrap$Bootstrap_Table$maybeAddScopeToFirstCell(row));
				},
				_p17._0.rows));
	} else {
		return A3(
			_elm_lang$html$Html_Keyed$node,
			'tbody',
			_p17._0.attributes,
			A2(
				_elm_lang$core$List$map,
				function (_p18) {
					var _p19 = _p18;
					return {
						ctor: '_Tuple2',
						_0: _p19._0,
						_1: _rundis$elm_bootstrap$Bootstrap_Table$renderRow(
							_rundis$elm_bootstrap$Bootstrap_Table$maybeAddScopeToFirstCell(_p19._1))
					};
				},
				_p17._0.rows));
	}
};
var _rundis$elm_bootstrap$Bootstrap_Table$th = F2(
	function (options, children) {
		return _rundis$elm_bootstrap$Bootstrap_Table$Th(
			{options: options, children: children});
	});
var _rundis$elm_bootstrap$Bootstrap_Table$Td = function (a) {
	return {ctor: 'Td', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Table$mapInversedCell = function (cell) {
	var inverseOptions = function (options) {
		return A2(
			_elm_lang$core$List$map,
			function (opt) {
				var _p20 = opt;
				if (_p20.ctor === 'RoledCell') {
					return _rundis$elm_bootstrap$Bootstrap_Table$InversedCell(_p20._0);
				} else {
					return opt;
				}
			},
			options);
	};
	var _p21 = cell;
	if (_p21.ctor === 'Th') {
		var _p22 = _p21._0;
		return _rundis$elm_bootstrap$Bootstrap_Table$Th(
			_elm_lang$core$Native_Utils.update(
				_p22,
				{
					options: inverseOptions(_p22.options)
				}));
	} else {
		var _p23 = _p21._0;
		return _rundis$elm_bootstrap$Bootstrap_Table$Td(
			_elm_lang$core$Native_Utils.update(
				_p23,
				{
					options: inverseOptions(_p23.options)
				}));
	}
};
var _rundis$elm_bootstrap$Bootstrap_Table$mapInversedRow = function (row) {
	var inversedOptions = function (options) {
		return A2(
			_elm_lang$core$List$map,
			function (opt) {
				var _p24 = opt;
				if (_p24.ctor === 'RoledRow') {
					return _rundis$elm_bootstrap$Bootstrap_Table$InversedRow(_p24._0);
				} else {
					return opt;
				}
			},
			options);
	};
	var _p25 = row;
	if (_p25.ctor === 'Row') {
		return _rundis$elm_bootstrap$Bootstrap_Table$Row(
			{
				options: inversedOptions(_p25._0.options),
				cells: A2(_elm_lang$core$List$map, _rundis$elm_bootstrap$Bootstrap_Table$mapInversedCell, _p25._0.cells)
			});
	} else {
		return _rundis$elm_bootstrap$Bootstrap_Table$KeyedRow(
			{
				options: inversedOptions(_p25._0.options),
				cells: A2(
					_elm_lang$core$List$map,
					function (_p26) {
						var _p27 = _p26;
						return {
							ctor: '_Tuple2',
							_0: _p27._0,
							_1: _rundis$elm_bootstrap$Bootstrap_Table$mapInversedCell(_p27._1)
						};
					},
					_p25._0.cells)
			});
	}
};
var _rundis$elm_bootstrap$Bootstrap_Table$td = F2(
	function (options, children) {
		return _rundis$elm_bootstrap$Bootstrap_Table$Td(
			{options: options, children: children});
	});
var _rundis$elm_bootstrap$Bootstrap_Table$THead = function (a) {
	return {ctor: 'THead', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Table$maybeMapInversedTHead = F2(
	function (isTableInversed, _p28) {
		var _p29 = _p28;
		var _p30 = _p29._0;
		var isHeadInversed = A2(
			_elm_lang$core$List$any,
			function (opt) {
				return _elm_lang$core$Native_Utils.eq(opt, _rundis$elm_bootstrap$Bootstrap_Table$InversedHead);
			},
			_p30.options);
		return _rundis$elm_bootstrap$Bootstrap_Table$THead(
			(isTableInversed || isHeadInversed) ? _elm_lang$core$Native_Utils.update(
				_p30,
				{
					rows: A2(_elm_lang$core$List$map, _rundis$elm_bootstrap$Bootstrap_Table$mapInversedRow, _p30.rows)
				}) : _p30);
	});
var _rundis$elm_bootstrap$Bootstrap_Table$thead = F2(
	function (options, rows) {
		return _rundis$elm_bootstrap$Bootstrap_Table$THead(
			{options: options, rows: rows});
	});
var _rundis$elm_bootstrap$Bootstrap_Table$simpleThead = function (cells) {
	return A2(
		_rundis$elm_bootstrap$Bootstrap_Table$thead,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_rundis$elm_bootstrap$Bootstrap_Table$tr,
				{ctor: '[]'},
				cells),
			_1: {ctor: '[]'}
		});
};
var _rundis$elm_bootstrap$Bootstrap_Table$KeyedTBody = function (a) {
	return {ctor: 'KeyedTBody', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Table$keyedTBody = F2(
	function (attributes, rows) {
		return _rundis$elm_bootstrap$Bootstrap_Table$KeyedTBody(
			{attributes: attributes, rows: rows});
	});
var _rundis$elm_bootstrap$Bootstrap_Table$TBody = function (a) {
	return {ctor: 'TBody', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Table$maybeMapInversedTBody = F2(
	function (isTableInversed, tbody) {
		var _p31 = {ctor: '_Tuple2', _0: isTableInversed, _1: tbody};
		if (_p31._0 === false) {
			return tbody;
		} else {
			if (_p31._1.ctor === 'TBody') {
				var _p32 = _p31._1._0;
				return _rundis$elm_bootstrap$Bootstrap_Table$TBody(
					_elm_lang$core$Native_Utils.update(
						_p32,
						{
							rows: A2(_elm_lang$core$List$map, _rundis$elm_bootstrap$Bootstrap_Table$mapInversedRow, _p32.rows)
						}));
			} else {
				var _p35 = _p31._1._0;
				return _rundis$elm_bootstrap$Bootstrap_Table$KeyedTBody(
					_elm_lang$core$Native_Utils.update(
						_p35,
						{
							rows: A2(
								_elm_lang$core$List$map,
								function (_p33) {
									var _p34 = _p33;
									return {
										ctor: '_Tuple2',
										_0: _p34._0,
										_1: _rundis$elm_bootstrap$Bootstrap_Table$mapInversedRow(_p34._1)
									};
								},
								_p35.rows)
						}));
			}
		}
	});
var _rundis$elm_bootstrap$Bootstrap_Table$table = function (_p36) {
	var _p37 = _p36;
	var _p38 = _p37.options;
	var isInversed = A2(
		_elm_lang$core$List$any,
		function (opt) {
			return _elm_lang$core$Native_Utils.eq(opt, _rundis$elm_bootstrap$Bootstrap_Table$Inversed);
		},
		_p38);
	var classOptions = A2(
		_elm_lang$core$List$filter,
		function (opt) {
			return !_rundis$elm_bootstrap$Bootstrap_Table$isResponsive(opt);
		},
		_p38);
	return A2(
		_rundis$elm_bootstrap$Bootstrap_Table$maybeWrapResponsive,
		_p38,
		A2(
			_elm_lang$html$Html$table,
			_rundis$elm_bootstrap$Bootstrap_Table$tableAttributes(classOptions),
			{
				ctor: '::',
				_0: _rundis$elm_bootstrap$Bootstrap_Table$renderTHead(
					A2(_rundis$elm_bootstrap$Bootstrap_Table$maybeMapInversedTHead, isInversed, _p37.thead)),
				_1: {
					ctor: '::',
					_0: _rundis$elm_bootstrap$Bootstrap_Table$renderTBody(
						A2(_rundis$elm_bootstrap$Bootstrap_Table$maybeMapInversedTBody, isInversed, _p37.tbody)),
					_1: {ctor: '[]'}
				}
			}));
};
var _rundis$elm_bootstrap$Bootstrap_Table$simpleTable = function (_p39) {
	var _p40 = _p39;
	return _rundis$elm_bootstrap$Bootstrap_Table$table(
		{
			options: {ctor: '[]'},
			thead: _p40._0,
			tbody: _p40._1
		});
};
var _rundis$elm_bootstrap$Bootstrap_Table$tbody = F2(
	function (attributes, rows) {
		return _rundis$elm_bootstrap$Bootstrap_Table$TBody(
			{attributes: attributes, rows: rows});
	});
